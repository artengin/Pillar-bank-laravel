name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Prepare .env files
        run: |
          cp .env.example .env
          cp .env.testing.example .env.testing
          {
            echo "WEBHOOK_TRANSACTION_TOKEN_PILLARBANK_SECRET=bank-system-simulator"
            echo "KYC_SECRET_KEY=pillar-bank"
            echo "KYC_URL=test"
          } >> .env

          {
            echo "WEBHOOK_TRANSACTION_TOKEN_PILLARBANK_SECRET=bank-system-simulator"
            echo "KYC_SECRET_KEY=pillar-bank"
            echo "KYC_URL=test"
          } >> .env.testing

      - name: Start containers
        run: docker compose up -d --build php pgsql redis

      - name: Install dependencies
        run: docker compose exec -T php composer install

      - name: Generate app keys
        run: |
          docker compose exec -T php php artisan key:generate
          docker compose exec -T php php artisan jwt:secret --force
          docker compose exec -T php php artisan key:generate --env=testing
          docker compose exec -T php php artisan jwt:secret --env=testing --force

      - name: Clear and cache config
        run: |
          docker compose exec -T php php artisan config:clear
          docker compose exec -T php php artisan config:cache

      - name: Run migrations
        run: docker compose exec -T php php artisan migrate --force

      - name: Run linter
        run: docker compose exec -T php composer exec -- phpcs --standard=PSR12 app database routes tests

      - name: Run tests
        run: docker compose exec -T php php artisan test --env=testing
